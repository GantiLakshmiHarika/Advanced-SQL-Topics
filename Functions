Function in SQL?
A function is like a little program in the database that:
Takes input (like a number or name).
Does some calculation or operation.
Returns a value (like a number, text, or even a table).
Key point: A function must return something

Types of Functions
1️⃣ Scalar Function
Returns only one value.
Example: You have a salary, and you want to calculate 10% bonus.
2️⃣ How to Create a Scalar Function
CREATE FUNCTION GetBonus (@Salary INT)
RETURNS INT
AS
BEGIN
    RETURN (@Salary * 0.1)
END;
3️⃣ How to Execute a Scalar Function
SELECT EmployeeName, dbo.GetBonus(Salary) AS Bonus
FROM employe;

4️⃣ Using it with a Variable
DECLARE @mySalary INT = 50000;
SELECT dbo.GetBonus(@mySalary) AS MyBonus;
Input = 50000

Output = 5000



2️⃣ Table-Valued Function
Returns a table (like a normal query result).
Example: Get all employees of a specific department.

CREATE FUNCTION GetEmployeesByDept (@Dept VARCHAR(20))
RETURNS TABLE
AS
RETURN
(
    SELECT EmployeeID, EmployeeName, Salary
    FROM employe
    WHERE Department = @Dept
);
How to use it:

SELECT * FROM dbo.GetEmployeesByDept('mech');
This will return all employees from the mech department.



1️⃣ What is a Table-Valued Function?
A Table-Valued Function (TVF) is a function that returns a table instead of a single value.
You can use it like a normal table in your SELECT query.
Very useful when you want to filter or process data and return multiple rows.

2️⃣ Syntax for a Simple Table Function
CREATE FUNCTION GetEmployeesByDept (@Dept VARCHAR(20))
RETURNS TABLE
AS
RETURN
(
    SELECT EmployeeID, EmployeeName, Salary
    FROM employe
    WHERE Department = @Dept
);
3️⃣ How to  Execute a Table-Valued Function
SELECT * FROM dbo.GetEmployeesByDept('mech'); 
